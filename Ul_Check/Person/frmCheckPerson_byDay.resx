<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExport.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>